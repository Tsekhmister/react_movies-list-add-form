{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","onAdd","useState","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","hasTitleError","setTitleError","hasImgUrlError","setImgUrlError","hasImdbUrlError","setImdbUrlError","hasImdbIdError","setImdbIdError","onSubmit","event","preventDefault","newMovie","type","placeholder","value","classNames","error","onChange","target","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ad6360c.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './NewMovie.scss';\nimport classNames from 'classnames';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const [hasTitleError, setTitleError] = useState(false);\n  const [hasImgUrlError, setImgUrlError] = useState(false);\n  const [hasImdbUrlError, setImdbUrlError] = useState(false);\n  const [hasImdbIdError, setImdbIdError] = useState(false);\n\n  const resetErrors = () => {\n    setTitleError(!title);\n    setImgUrlError(!imgUrl);\n    setImdbUrlError(!imdbUrl);\n    setImdbIdError(!imdbId);\n  };\n\n  const resetForm = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    resetErrors();\n\n    if (title && imgUrl && imdbUrl && imdbId) {\n      onAdd(newMovie);\n      resetForm();\n    }\n  };\n\n  return (\n    <form\n      onSubmit={onSubmit}\n      className=\"add\"\n    >\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={title}\n          className={classNames({ error: hasTitleError })}\n          onChange={event => {\n            setTitle(event.target.value);\n            setTitleError(false);\n          }}\n        />\n      </div>\n\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Description\"\n          value={description}\n          onChange={event => {\n            setDescription(event.target.value);\n          }}\n        />\n      </div>\n\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Image Url\"\n          value={imgUrl}\n          className={classNames({ error: hasImgUrlError })}\n          onChange={event => {\n            setImgUrl(event.target.value);\n            setImgUrlError(false);\n          }}\n        />\n      </div>\n\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Imdb Url\"\n          value={imdbUrl}\n          className={classNames({ error: hasImdbUrlError })}\n          onChange={event => {\n            setImdbUrl(event.target.value);\n            setImdbUrlError(false);\n          }}\n        />\n      </div>\n\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Imdb ID\"\n          value={imdbId}\n          className={classNames({ error: hasImdbIdError })}\n          onChange={event => {\n            setImdbId(event.target.value);\n            setImdbIdError(false);\n          }}\n        />\n      </div>\n      <button type=\"submit\">Add</button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (movie: Movie) => {\n    setMovies([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}